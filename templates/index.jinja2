<!doctype html>
<html lang="en">
<head>
    <title>Home</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap.min.css') }}"/>
    <link rel="stylesheet" href="{{ url_for('static', filename='css/bootstrap-icons.min.css') }}"/>
    <link rel="stylesheet" href="{{ url_for('static', filename='tabler/webfont/tabler-icons.min.css') }}"/>
    <style>
        body {
            font-family: 'Courier New', Courier, monospace;
        {#font-family: 'JetBrains Mono', monospace;#}
        }

        a {
            text-decoration: none;
            color: black;
        }

        .banner {
        {#background-color: #9a0000;#} color: white;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 35px; /* Adjust the height as needed */
            margin-bottom: 0; /* Remove margin at the bottom */
            padding: 10px 3px 0px 10px;
        }

        .navbar {
            margin-top: 0; /* Remove margin at the top */
        {#background-color: #2596be;#} background-color: #5e8d87;
        {##5988da;#} color: white;
        }

        .breadcrumb-item + .breadcrumb-item::before {
            color: rgba(255, 255, 255, .5) !important; /* Change this to your desired color */
        }

        tr[data-href] {
            cursor: pointer;
        }
    </style>
</head>
<body>
{% if notice_text %}
    <div class="banner bg-danger">
        <p>{{ notice_text }}</p>
    </div>
{% endif %}
<nav class="navbar">
    <div class="container-fluid">
        <a class="navbar-brand text-white" href="/">Files</a>
        <!-- Breadcrumb navigation -->
        <nav style="--bs-breadcrumb-divider: '/';" aria-label="breadcrumb" class="text-white">
            <ol class="breadcrumb mb-0">
                <li class="breadcrumb-item"><a href="/" class="{{ "text-white-50" if path != "/" else "text-white" }}">/files</a>
                </li>
                {% set ns = namespace(breadcrumb_path = '') %}
                {% for p in path.split("/") %}
                    {% if p %}
                        {% set ns.breadcrumb_path = ns.breadcrumb_path + '/' + p %}
                        <li class="breadcrumb-item">
                            <a href="{{ ns.breadcrumb_path }}"
                               class="{{ " text-white" if loop.last else "text-white-50" }}">{{ p }}</a>
                        </li>
                    {% endif %}
                {% endfor %}
            </ol>
        </nav>
        <div class="d-flex">
            <!-- Buttons to trigger the modals -->
            <button type="button" class="btn btn-primary me-2" data-bs-toggle="modal" data-bs-target="#uploadModal">
                <i class="ti ti-upload"></i>
                {#                Upload File#}
            </button>
            <button type="button" class="btn btn-success" data-bs-toggle="modal" data-bs-target="#newFolderModal">
                <i class="ti ti-folder-plus"></i>
                {#                New Folder#}
            </button>
        </div>
    </div>
</nav>
<main class="container">
    <!-- Upload form modal -->
    <div class="modal fade" id="uploadModal" tabindex="-1" aria-labelledby="uploadModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="uploadModalLabel">Upload File</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="uploadForm" method="post" enctype="multipart/form-data">
                        <input type="hidden" name="current_path" value="{{ path }}">
                        <div class="mb-3">
                            <label for="file" class="form-label">Upload file</label>
                            <input class="form-control" type="file" id="file" name="file">
                        </div>
                        <button type="submit" class="btn btn-primary">Upload</button>
                    </form>

                    <div class="progress mt-3">
                        <div id="progressBar" class="progress-bar" role="progressbar" style="width: 0%;"
                             aria-valuenow="0"
                             aria-valuemin="0" aria-valuemax="100"></div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- New folder form modal -->
    <div class="modal fade" id="newFolderModal" tabindex="-1" aria-labelledby="newFolderModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="newFolderModalLabel">New Folder</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="newFolderForm" method="post" action="{{ url_for('new_folder') }}">
                        <input type="hidden" name="current_path" value="{{ path }}">
                        <div class="mb-3">
                            <label for="folderName" class="form-label">Folder Name</label>
                            <input class="form-control" type="text" id="folderName" name="folder_name" required>
                        </div>
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="openFolder" name="open_folder">
                            <label class="form-check-label" for="openFolder">
                                Open folder after creation
                            </label>
                        </div>
                        <button type="submit" class="btn btn-primary">Create</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Success message modal -->
    <div class="modal fade" id="successModal" tabindex="-1" aria-labelledby="successModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="successModalLabel">Success</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    Operation completed successfully!
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" id="reloadButton">OK</button>
                </div>
            </div>
        </div>
    </div>

    <table class="table table-hover mt-3">
        <thead>
        <tr>
            <th scope="col" class="px-3">Name</th>
            <th scope="col" class="px-3"></th> <!-- Empty column to create space -->
            <th scope="col" class="px-3 text-end">Size</th>
            <th scope="col" class="px-3 text-end" style="width: 250px">Last modified</th>
        </tr>
        </thead>
        <tbody>
        {% for file in list_files %}
            <tr data-href="{{ url_for('root', path=file.path) }}">
                <td>
                    <i class="{{ file.icon }}" style="color: {{ file.colour }}"></i>
                    {{ file.name }}
                </td>
                <td class="px-3"></td> <!-- Empty column to create space -->
                <td class="px-3 text-end">{{ file.size }}</td>
                <td class="px-3 text-end">{{ file.last_modified }}</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>
</main>

<script src="{{ url_for('static', filename='js/bootstrap.bundle.min.js') }}"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const rows = document.querySelectorAll('tr[data-href]');
        rows.forEach(row => {
            row.addEventListener('click', function () {
                window.location.href = this.dataset.href;
            });
        });
    });
</script>
<script>
    document.getElementById('uploadForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const xhr = new XMLHttpRequest();

        xhr.upload.addEventListener('progress', function (event) {
            if (event.lengthComputable) {
                const percentComplete = (event.loaded / event.total) * 100;
                const progressBar = document.getElementById('progressBar');
                progressBar.style.width = percentComplete + '%';
                progressBar.setAttribute('aria-valuenow', percentComplete);
            }
        });

        xhr.addEventListener('load', function () {
            if (xhr.status === 200) {
                const successModal = new bootstrap.Modal(document.getElementById('successModal'));
                successModal.show();
            } else {
                alert('Upload failed');
            }
        });

        xhr.open('POST', form.action);
        xhr.send(formData);
    });

    document.getElementById('newFolderForm').addEventListener('submit', function (event) {
        event.preventDefault();
        const form = event.target;
        const formData = new FormData(form);
        const xhr = new XMLHttpRequest();

        xhr.addEventListener('load', function () {
            if (xhr.status === 200) {
                const currentPath = form.querySelector('input[name="current_path"]').value;
                const folderName = form.querySelector('input[name="folder_name"]').value;
                const openFolder = form.querySelector('input[name="open_folder"]').checked;
                if (openFolder) {
                    window.location.href = currentPath + '/' + folderName;
                } else {
                    window.location.reload();
                }
            } else {
                alert('Folder creation failed');
            }
        });

        xhr.open('POST', form.action);
        xhr.send(formData);
    });

    document.getElementById('reloadButton').addEventListener('click', function () {
        window.location.reload();
    });
</script>
</body>
</html>